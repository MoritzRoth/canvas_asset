{
	"camera" : 
	{
		"center" : "327.54205 108.47870 -1.00000",
		"eye" : "327.54205 108.47870 0.00000",
		"up" : "0.00000 1.00000 0.00000"
	},
	"general" : 
	{
		"ambientcolor" : "0.30000 0.30000 0.30000",
		"bloom" : false,
		"bloomhdrfeather" : 0.1,
		"bloomhdriterations" : 8,
		"bloomhdrscatter" : 1.619,
		"bloomhdrstrength" : 2.0,
		"bloomhdrthreshold" : 1.0,
		"bloomstrength" : 2.0,
		"bloomthreshold" : 0.64999998,
		"bloomtint" : "1.00000 1.00000 1.00000",
		"camerafade" : true,
		"cameraparallax" : false,
		"cameraparallaxamount" : 0.5,
		"cameraparallaxdelay" : 0.1,
		"cameraparallaxmouseinfluence" : 0.5,
		"camerapreview" : true,
		"camerashake" : false,
		"camerashakeamplitude" : 0.5,
		"camerashakeroughness" : 1.0,
		"camerashakespeed" : 3.0,
		"clearcolor" : "0.00000 0.00000 0.00000",
		"clearenabled" : true,
		"farz" : 10000.0,
		"fov" : 50.0,
		"hdr" : false,
		"nearz" : 0.0099999998,
		"orthogonalprojection" : 
		{
			"height" : 1440,
			"width" : 2560
		},
		"perspectiveoverridefov" : 95.0,
		"skylightcolor" : "0.30000 0.30000 0.30000",
		"zoom" : 1.0
	},
	"objects" : 
	[
		{
			"castshadow" : false,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2911547294/clouds/effect.json",
					"id" : 299,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"SHADING" : 1
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"colorend" : "1 1 1",
								"colorstart" : "1 1 1",
								"feather" : 0,
								"scale" : "1.3 1.3 0.5 0.5",
								"smoothness" : 0,
								"speed" : "0.1 -0.2",
								"threshold" : -1
							},
							"id" : 300
						}
					],
					"visible" : true
				}
			],
			"id" : 288,
			"image" : "models/util/projectlayer.json",
			"name" : "Pattern Texture",
			"origin" : "1280.00000 720.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"size" : "2560.00000 1440.00000"
		},
		{
			"castshadow" : false,
			"dependencies" : [ 288 ],
			"effects" : 
			[
				{
					"file" : "effects/repeattexture/effect.json",
					"id" : 309,
					"name" : "Reset Texture",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"Rotation" : 
								{
									"user" : "texturerotation",
									"value" : 0
								},
								"Scale" : 
								{
									"user" : "texturescale",
									"value" : 1
								}
							},
							"id" : 310,
							"usertextures" : [ null, "heightmap" ]
						}
					],
					"visible" : true
				},
				{
					"combos" : 
					{
						"ENABLE_BLEND" : 1,
						"ENABLE_LINE_INFLUENCE" : 1,
						"ENABLE_UNDO_CMD" : 1
					},
					"file" : "effects/canvas/effect.json",
					"id" : 160,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"cmd2" : 
								{
									"script" : "'use strict';\n\n\n/**\n * @param {Number} value - for property 'Copy Below (Dont, Reset, Noise)'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\t\n\treturn value;\n}\n\n\n/**\n * @param {Number} value - for property 'Copy Below (Reset)'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tif(shared[\"locked\"]) {\n\t\tif(shared[\"reset\"] != \"no\") {\n\t\t\t\n\t\t}\n\t\treturn 0.;\n\t}\n\n\tswitch(shared[\"cmd\"]) {\n\t\tcase \"reset\":\n\t\t\treturn 1.;\n\t\tcase \"undo\":\n\t\t\treturn 2.;\n\t\tcase \"blend\":\n\t\t\treturn 3.;\n\t\tcase \"none\":\n\t\tdefault:\n\t\t\treturn 0.;\n\t}\n}",
									"value" : 1
								},
								"mouseDown" : 
								{
									"script" : "'use strict';\n\nvar lastFrame;\nvar mouseDown;\n\n/**\n * @param {Number} value - for property 'Mouse Down'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\tlastFrame = 0;\n\tmouseDown = false;\n\tshared[\"cursorOnUi\"] = false;\n\treturn 0;\n}\n\n/**\n * @param {Vec2} value - for property 'Mouse Down (X = This Frame, Y = Last Frame)'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar vec = new Vec2((mouseDown && !shared[\"cursorOnUi\"] && !shared[\"locked\"]) ? 1 : 0, lastFrame);\n\tlastFrame = vec.x;\n\treturn vec;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tmouseDown = false;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tmouseDown = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tmouseDown = false;\n}\n",
									"value" : "0.00000 0.00000"
								}
							},
							"id" : 161
						},
						{
							"constantshadervalues" : 
							{
								"drawAlpha" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared['currentBrush'].alpha;\n}\n",
									"value" : 1
								},
								"drawHardness" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared.currentBrush.hardness;\n}\n",
									"scriptproperties" : 
									{
										"key" : "drawFeather"
									},
									"value" : 1
								},
								"drawRadius" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared.currentBrush.size;\n}\n",
									"scriptproperties" : 
									{
										"key" : "drawSize"
									},
									"value" : 0.22
								},
								"mouseDown" : 
								{
									"script" : "'use strict';\n\nvar lastFrame;\nvar mouseDown;\n\n/**\n * @param {Number} value - for property 'Mouse Down'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\tlastFrame = 0;\n\tmouseDown = false;\n\tshared[\"cursorOnUi\"] = false;\n\treturn 0;\n}\n\n/**\n * @param {Vec2} value - for property 'Mouse Down (X = This Frame, Y = Last Frame)'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar vec = new Vec2((mouseDown && !shared[\"cursorOnUi\"] && !shared[\"locked\"]) ? 1 : 0, lastFrame);\n\tlastFrame = vec.x;\n\treturn vec;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tmouseDown = false;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tmouseDown = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tmouseDown = false;\n}\n",
									"value" : "0.00000 0.00000"
								}
							},
							"id" : 64
						},
						{
							"combos" : 
							{
								"ENABLE_BLEND" : 1,
								"ENABLE_CPY_BRUSH" : 1,
								"ENABLE_SMEAR" : 1,
								"ENABLE_UNDO_CMD" : 1
							},
							"constantshadervalues" : 
							{
								"brush0RProb" : 1,
								"brush0Spacing" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared.currentBrush.spacing;\n}\n",
									"scriptproperties" : 
									{
										"key" : "brushSpacing"
									},
									"value" : 0.125
								},
								"brush0Texture" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'brush0Texture'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.currentBrush.brush_type == 'textures' ? 1.0 : 0.0;\n}\n",
									"value" : 1
								},
								"brush1GProb" : 0.5,
								"brush1Prob" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'brush1Prob'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar tex = shared.currentBrush.tex;\n\treturn new Vec2(tex[0].probability, tex[1].probability);\n}\n",
									"value" : "1.00000 1.00000"
								},
								"brush2BProb" : 0.0,
								"brush2Factor" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'brush2Factor'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar tex = shared.currentBrush.tex;\n\treturn new Vec2(tex[0].influence, tex[1].influence);\n}\n",
									"value" : "1.00000 1.00000"
								},
								"brush3AProb" : "0 0 0 0",
								"brushAlphaJitter" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'brushAlphaJitter'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar tex = shared.currentBrush.tex;\n\treturn new Vec2(tex[0].alpha_jitter, tex[1].alpha_jitter);\n}\n",
									"value" : "0.00000 0.00000"
								},
								"brushAlphaVelMod" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'brushAlphaVelMod'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar tex = shared.currentBrush.tex;\n\treturn new Vec2(tex[0].alpha_vel, tex[1].alpha_vel);\n}\n",
									"value" : "0.00000 0.00000"
								},
								"brushPositionJitter" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'brushPositionJitter'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar tex = shared.currentBrush.tex;\n\treturn new Vec2(tex[0].scatter_jitter, tex[1].scatter_jitter);\n}\n",
									"value" : "0.20000 0.40000"
								},
								"brushProb" : "1 1 0 0",
								"brushRotJitter" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'brushRotJitter'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar tex = shared.currentBrush.tex;\n\treturn new Vec2(tex[0].rot_jitter, tex[1].rot_jitter);\n}\n",
									"value" : "1.00000 1.00000"
								},
								"brushSizeFactor" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'brushSizeFactor'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar tex = shared.currentBrush.tex;\n\treturn new Vec2(tex[0].size, tex[1].size);\n}\n",
									"value" : "1.00000 1.00000"
								},
								"brushSizeJitter" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'brushSizeJitter'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar tex = shared.currentBrush.tex;\n\treturn new Vec2(tex[0].size_jitter, tex[1].size_jitter);\n}\n",
									"value" : "0.00000 0.00000"
								},
								"brushSizeVelMod" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'brushSizeVelMod'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar tex = shared.currentBrush.tex;\n\treturn new Vec2(tex[0].size_vel, tex[1].size_vel);\n}\n",
									"value" : "-0.70000 -0.70000"
								},
								"brushSpacing" : 
								{
									"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared[scriptProperties['key']];\n}\n",
									"scriptproperties" : 
									{
										"key" : "brushSpacing"
									},
									"value" : 0.25
								},
								"brushSpacingOffset" : 1,
								"brushVelAlphaMod" : -0.31,
								"brushVelMax" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'brushVelMax'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.currentBrush.hi_vel;\n}\n",
									"value" : 5
								},
								"brushVelSizeMod" : -0.69,
								"cmd" : 
								{
									"script" : "'use strict';\n\n\n/**\n * @param {Number} value - for property 'Copy Below (Dont, Reset, Noise)'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\t\n\treturn value;\n}\n\n\n/**\n * @param {Number} value - for property 'Copy Below (Reset)'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tif(shared[\"locked\"]) {\n\t\tif(shared[\"cmd\"] != \"none\") {\n\t\t\tshared[\"cmd\"] = \"none\";\n\t\t}\n\t\treturn 0.;\n\t}\n\n\tswitch(shared[\"cmd\"]) {\n\t\tcase \"reset\":\n\t\t\tshared[\"cmd\"] = \"none\";\n\t\t\treturn 1.;\n\t\tcase \"undo\":\n\t\t\tshared[\"cmd\"] = \"none\";\n\t\t\treturn 2.;\n\t\tcase \"blend\":\n\t\t\tshared[\"cmd\"] = \"none\";\n\t\t\treturn 3.;\n\t\tcase \"none\":\n\t\t\treturn 0.;\n\t\tdefault:\n\t\t\tshared[\"cmd\"] = \"none\";\n\t\t\treturn 0.;\n\t}\n}",
									"value" : 1
								},
								"drawAlpha" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared['currentBrush'].alpha;\n}\n",
									"value" : 1
								},
								"drawCol" : 
								{
									"script" : "'use strict';\n\nimport * as WEColor from 'WEColor';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tvar cb = shared.currentBrush;\n\treturn WEColor.hsv2rgb(new Vec3(cb.hue, cb.saturation, cb.value));;\n}\n",
									"value" : "1.00000 1.00000 1.00000"
								},
								"drawHardness" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared.currentBrush.hardness;\n}\n",
									"scriptproperties" : 
									{
										"key" : "drawFeather"
									},
									"value" : 1
								},
								"drawMode" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tvar cb = shared.currentBrush;\n\tswitch(cb.draw_mode) {\n\t\tcase \"paint\":\n\t\t\treturn 1.;\n\t\tcase \"smear\":\n\t\t\treturn 2.;\n\t\tcase \"flatten\":\n\t\t\treturn 3.;\n\t\tcase \"blend\":\n\t\t\treturn 4.;\n\t\tcase \"erase\":\n\t\tdefault:\n\t\t\treturn 0.;\n\t}\n}\n",
									"value" : 0
								},
								"drawRadius" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared.currentBrush.size;\n}\n",
									"scriptproperties" : 
									{
										"key" : "drawSize"
									},
									"value" : 0.22
								},
								"influenceMode" : 
								{
									"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tswitch(shared[scriptProperties['key']]) {\n\t\tcase \"line\":\n\t\t\treturn 1.;\n\t\tcase \"spray\":\n\t\tdefault:\n\t\t\treturn 0.;\n\t}\n}\n",
									"scriptproperties" : 
									{
										"key" : "drawInfluence"
									},
									"value" : 0
								},
								"mouseDown" : 
								{
									"script" : "'use strict';\n\nvar lastFrame;\nvar mouseDown;\n\n/**\n * @param {Number} value - for property 'Mouse Down'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\tlastFrame = 0;\n\tmouseDown = false;\n\tshared[\"cursorOnUi\"] = false;\n\treturn 0;\n}\n\n/**\n * @param {Vec2} value - for property 'Mouse Down (X = This Frame, Y = Last Frame)'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar vec = new Vec2((mouseDown && !shared[\"cursorOnUi\"] && !shared[\"locked\"]) ? 1 : 0, lastFrame);\n\tlastFrame = vec.x;\n\treturn vec;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tmouseDown = false;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tmouseDown = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tmouseDown = false;\n}\n",
									"value" : "0.00000 0.00000"
								}
							},
							"id" : 62,
							"textures" : 
							[
								null,
								null,
								null,
								null,
								"_rt_imageLayerComposite_288_a",
								null,
								"watercolor3"
							]
						},
						{
							"constantshadervalues" : 
							{
								"brush0Spacing" : 0.125,
								"brushSpacing" : 
								{
									"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared[scriptProperties['key']];\n}\n",
									"scriptproperties" : 
									{
										"key" : "brushSpacing"
									},
									"value" : 0.25
								},
								"drawRadius" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared.currentBrush.size;\n}\n",
									"scriptproperties" : 
									{
										"key" : "drawSize"
									},
									"value" : 0.22
								},
								"mouseDown" : 
								{
									"script" : "'use strict';\n\nvar lastFrame;\nvar mouseDown;\n\n/**\n * @param {Number} value - for property 'Mouse Down'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\tlastFrame = 0;\n\tmouseDown = false;\n\tshared[\"cursorOnUi\"] = false;\n\treturn 0;\n}\n\n/**\n * @param {Vec2} value - for property 'Mouse Down (X = This Frame, Y = Last Frame)'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar vec = new Vec2((mouseDown && !shared[\"cursorOnUi\"] && !shared[\"locked\"]) ? 1 : 0, lastFrame);\n\tlastFrame = vec.x;\n\treturn vec;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tmouseDown = false;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tmouseDown = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tmouseDown = false;\n}\n",
									"value" : "0.00000 0.00000"
								}
							},
							"id" : 18
						},
						{
							"combos" : 
							{
								"ENABLE_BLEND" : 1,
								"ENABLE_CPY_BRUSH" : 1,
								"ENABLE_SMEAR" : 1,
								"ENABLE_UNDO_CMD" : 1
							},
							"constantshadervalues" : 
							{
								"drawCol" : 
								{
									"script" : "'use strict';\n\nimport * as WEColor from 'WEColor';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tvar cb = shared.currentBrush;\n\treturn WEColor.hsv2rgb(new Vec3(cb.hue, cb.saturation, cb.value));;\n}\n",
									"value" : "1.00000 1.00000 1.00000"
								},
								"drawMode" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tvar cb = shared.currentBrush;\n\tswitch(cb.draw_mode) {\n\t\tcase \"paint\":\n\t\t\treturn 1.;\n\t\tcase \"smear\":\n\t\t\treturn 2.;\n\t\tcase \"flatten\":\n\t\t\treturn 3.;\n\t\tcase \"blend\":\n\t\t\treturn 4.;\n\t\tcase \"erase\":\n\t\tdefault:\n\t\t\treturn 0.;\n\t}\n}\n",
									"value" : 0
								},
								"influenceMode" : 
								{
									"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tswitch(shared[scriptProperties['key']]) {\n\t\tcase \"line\":\n\t\t\treturn 1.;\n\t\tcase \"spray\":\n\t\tdefault:\n\t\t\treturn 0.;\n\t}\n}\n",
									"scriptproperties" : 
									{
										"key" : "drawInfluence"
									},
									"value" : 0
								},
								"mouseDown" : 
								{
									"script" : "'use strict';\n\nvar lastFrame;\nvar mouseDown;\n\n/**\n * @param {Number} value - for property 'Mouse Down'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\tlastFrame = 0;\n\tmouseDown = false;\n\tshared[\"cursorOnUi\"] = false;\n\treturn 0;\n}\n\n/**\n * @param {Vec2} value - for property 'Mouse Down (X = This Frame, Y = Last Frame)'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tvar vec = new Vec2((mouseDown && !shared[\"cursorOnUi\"] && !shared[\"locked\"]) ? 1 : 0, lastFrame);\n\tlastFrame = vec.x;\n\treturn vec;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tmouseDown = false;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tmouseDown = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tmouseDown = false;\n}\n",
									"value" : "0.00000 0.00000"
								}
							},
							"id" : 73,
							"textures" : [ null, null, null, null, "_rt_imageLayerComposite_288_a" ]
						}
					],
					"visible" : true
				}
			],
			"id" : 16,
			"image" : "models/util/projectlayer.json",
			"name" : "Canvas",
			"origin" : "1280.00000 720.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"size" : "2560.00000 1440.00000"
		},
		{
			"angles" : 
			{
				"script" : "'use strict';\n\n// SETUP & EVENT HANDLING SCRIPT\n\n/**\n * @param {Vec3} value - for property 'angles'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared['brushEditor'] = {\n\t\tvisible: false,\n\t\tbrushId: 0,\n\t\ttexCnt: 2,\n\t\ttexId : 0,\n\t\tchanged: true,\n\t\thasChanged: false\n\t};\n\tshared['currentBrush'] = {\n\t\ttex: []\n\t};\n\tfor(var i = 0; i < shared['brushEditor'].texCnt; i++) {\n\t\tshared['currentBrush']['tex'][i] = {};\n\t}\n\n\tshared['brushes'] = localStorage.get('brushes', localStorage.LOCATION_GLOBAL) || [];\n\tif(shared['brushes'].length > 0) {\t// TODO REMOVE ME\n\t\tshared['currentBrush'] = JSON.parse(JSON.stringify(shared['brushes'][0]));\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Vec3} value - for property 'angles'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['changed']) {\n\t\tshared['brushEditor']['hasChanged'] = true;\n\t\tshared['brushEditor']['changed'] = false;\n\t}else {\n\t\tshared['brushEditor']['hasChanged'] = false;\n\t}\n\treturn value;\n}\n",
				"value" : "0.00000 -0.00000 0.00000"
			},
			"castshadow" : false,
			"color" : "0.96471 0.96471 0.96471",
			"id" : 293,
			"image" : "models/util/solidlayer.json",
			"name" : "Brush Designer",
			"origin" : 
			{
				"script" : "'use strict';\n\n// Created by Rusty\n\nexport var scriptProperties = createScriptProperties()\n    .addCheckbox({\n        name: 'isMovable',\n        label: 'Is movable',\n        value: false\n    })\n    .finish();\n\nconst storageName = \"storedPosOldSquareMIC\";\nlet isDragging = false;\nlet dragOffset;\n\nexport function cursorDown(event) {\n    isDragging = true;\n    dragOffset = thisLayer.origin.subtract(event.worldPosition);\n}\n\nexport function cursorUp(event) {\n    isDragging = false;\n    localStorage.set(storageName, thisLayer.origin);\n}\n\nexport function cursorMove(event) {\n    if (isDragging && scriptProperties.isMovable) {\n        thisLayer.origin = event.worldPosition.add(dragOffset);\n    }\n}\n\nexport function init() {\n    return localStorage.get(storageName) || thisLayer.origin;\n} \n",
				"scriptproperties" : 
				{
					"isMovable" : true
				},
				"value" : "1480.00000 1304.15625 0.00000"
			},
			"size" : "1060.00000 60.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.brushEditor.visible;\n}\n",
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 418,
			"image" : "models/Window.json",
			"name" : "Background",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"value" : "-0.00012 -334.38184 0.00000"
			},
			"parent" : 293,
			"scale" : "0.60001 0.59999 0.60000",
			"size" : "2030.00000 1256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.96471 0.96471 0.96471",
			"id" : 304,
			"image" : "models/util/solidlayer.json",
			"name" : "Move Bar Visual",
			"origin" : "0.00012 0.00000 0.00000",
			"parent" : 293,
			"scale" : "4.14173 0.23501 0.60000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 0.00000 3.14159",
			"castshadow" : false,
			"id" : 455,
			"image" : "models/Next_2.json",
			"name" : "Previous_2",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(!isVisible()) {return;}\n\tshared.brushEditor.brushId = (shared.brushes.length + shared.brushEditor.brushId - 1) % shared.brushes.length;\n\tshared.currentBrush = JSON.parse(JSON.stringify(shared.brushes[shared.brushEditor.brushId]));\n\tshared.brushEditor.changed = true;\n}\n",
				"value" : "-120.00000 0.00003 0.00000"
			},
			"parent" : 304,
			"scale" : "0.20593 3.62931 1.42154",
			"size" : "64.00000 64.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 420,
			"image" : "models/Next_2.json",
			"name" : "Next_2",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(!isVisible()) {return;}\n\tshared.brushEditor.brushId = (shared.brushEditor.brushId + 1) % shared.brushes.length;\n\tshared.currentBrush = JSON.parse(JSON.stringify(shared.brushes[shared.brushEditor.brushId]));\n\tshared.brushEditor.changed = true;\n}\n",
				"value" : "-105.00000 0.00000 0.00000"
			},
			"parent" : 304,
			"scale" : "0.20593 3.62931 1.42154",
			"size" : "64.00000 64.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "1.00000 1.00000 1.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 295,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Window Title",
			"opaquebackground" : false,
			"origin" : "-95.00000 20.00000 0.00000",
			"padding" : 32,
			"parent" : 304,
			"pointsize" : 8.0,
			"scale" : "0.24144 4.25508 1.66667",
			"size" : "393.00000 38.00000",
			"text" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {String} value - for property 'text'\n * @return {String} - update current property value\n */\nexport function update(value) {\n\t\n\treturn `Editing Custom Brush ${shared.brushEditor.brushId + 1} / ${shared.brushes.length}`;\n}\n",
				"value" : "Editing Custom Brush X / Y"
			},
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 434,
			"image" : "models/Print_2.json",
			"name" : "Print_2",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(!isVisible()) {return;}\n\tconsole.log(JSON.stringify(shared['currentBrush']));\n}\n",
				"value" : "45.00000 0.00000 0.00000"
			},
			"parent" : 304,
			"scale" : "0.20593 3.62931 1.42154",
			"size" : "64.00000 64.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 406,
			"image" : "models/Delete_2.json",
			"name" : "Delete_2",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(!isVisible()) {return;}\n\tif(shared.brushes.length <= 1) {return;}\n\n\tvar brushes = shared.brushes;\n\tvar editor = shared.brushEditor;\n\n\tbrushes.splice(editor.brushId, 1);\n\teditor.brushId = Math.min(editor.brushId, brushes.length - 1);\n\tshared.currentBrush = JSON.parse(JSON.stringify(brushes[editor.brushId]));\n\teditor.changed = true;\n\n\tlocalStorage.set('brushes', brushes, localStorage.LOCATION_GLOBAL);\n}\n",
				"value" : "60.00000 0.00000 0.00000"
			},
			"parent" : 304,
			"scale" : "0.20593 3.62931 1.42154",
			"size" : "64.00000 64.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 448,
			"image" : "models/Refresh_2.json",
			"name" : "Refresh_2",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(!isVisible()) {return;}\n\tshared.brushes = localStorage.get('brushes', localStorage.LOCATION_GLOBAL);\n\tshared.currentBrush = JSON.parse(JSON.stringify(shared.brushes[shared.brushEditor.brushId]));\n\tshared.brushEditor.changed = true;\n}\n",
				"value" : "75.00000 0.00000 0.00000"
			},
			"parent" : 304,
			"scale" : "0.20593 3.62931 1.42154",
			"size" : "64.00000 64.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 414,
			"image" : "models/Add_2.json",
			"name" : "Add_2",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(!isVisible()) {return;}\n\tshared.brushes.push(JSON.parse(JSON.stringify(shared['currentBrush'])));\n\tshared.brushEditor.brushId = shared.brushes.length - 1;\n\tshared.brushEditor.changed = true;\n\tlocalStorage.set('brushes', shared['brushes'], localStorage.LOCATION_GLOBAL);\n}\n",
				"value" : "90.00000 0.00000 0.00000"
			},
			"parent" : 304,
			"scale" : "0.20593 3.62931 1.42154",
			"size" : "64.00000 64.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 438,
			"image" : "models/Save_2.json",
			"name" : "Save_2",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(!isVisible()) {return;}\n\tshared['brushes'][shared.brushEditor.brushId] = JSON.parse(JSON.stringify(shared['currentBrush']));\n\tlocalStorage.set('brushes', shared['brushes'], localStorage.LOCATION_GLOBAL);\n}\n",
				"value" : "105.00000 0.00000 0.00000"
			},
			"parent" : 304,
			"scale" : "0.20593 3.62931 1.42154",
			"size" : "64.00000 64.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 453,
			"image" : "models/Close_2.json",
			"name" : "Close_2",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(!isVisible()) {return;}\n\tshared.brushEditor.visible = !shared.brushEditor.visible;\n\tshared[\"cursorOnUi\"] = false;\n}\n",
				"value" : "120.00000 0.00000 0.00000"
			},
			"parent" : 304,
			"scale" : "0.20593 3.62931 1.42154",
			"size" : "64.00000 64.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 358,
			"name" : "Settings",
			"origin" : "-529.28687 -56.72253 0.00000",
			"parent" : 293
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 307,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Draw Mode",
			"opaquebackground" : false,
			"origin" : "60.00000 0.00000 0.00000",
			"padding" : 0,
			"parent" : 358,
			"pointsize" : 5.0,
			"size" : "107.00000 24.00000",
			"text" : "Draw Mode:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "draw_mode",
					"val" : "paint"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 357,
			"image" : "models/small_circle@2x.json",
			"name" : "Paint",
			"origin" : "63.00000 -2.20166 0.00000",
			"parent" : 307,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 359,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 357,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 361,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 357,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "45.00000 24.00000",
			"text" : "Paint",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "draw_mode",
					"val" : "erase"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 322,
			"image" : "models/small_circle@2x.json",
			"name" : "Erase",
			"origin" : "166.00000 -2.20166 0.00000",
			"parent" : 307,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 323,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 322,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 324,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 322,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "51.00000 24.00000",
			"text" : "Erase",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "draw_mode",
					"val" : "blend"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 329,
			"image" : "models/small_circle@2x.json",
			"name" : "Blend",
			"origin" : "266.47632 -2.20166 0.00000",
			"parent" : 307,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 330,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 329,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 331,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 329,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "50.00000 24.00000",
			"text" : "Blend",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "draw_mode",
					"val" : "smear"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 335,
			"image" : "models/small_circle@2x.json",
			"name" : "Smear",
			"origin" : "373.49219 -2.20166 0.00000",
			"parent" : 307,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 336,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 335,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 337,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 335,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "60.00000 24.00000",
			"text" : "Smear",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "draw_mode",
					"val" : "flatten"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 341,
			"image" : "models/small_circle@2x.json",
			"name" : "Flatten",
			"origin" : "485.56934 -2.20166 0.00000",
			"parent" : 307,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 342,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 341,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 343,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 341,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "59.00000 24.00000",
			"text" : "Flatten",
			"verticalalign" : "center"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 360,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Stroke Type",
			"opaquebackground" : false,
			"origin" : "60.00000 -35.00000 0.00000",
			"padding" : 0,
			"parent" : 358,
			"pointsize" : 5.0,
			"size" : "109.00000 24.00000",
			"text" : "Stroke Type:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn shared['currentBrush']['draw_mode'] != 'smear';;\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "stroke_type",
					"val" : "stamp"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 362,
			"image" : "models/small_circle@2x.json",
			"name" : "Stamp",
			"origin" : "63.00000 -2.20166 0.00000",
			"parent" : 360,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 363,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 362,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 364,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 362,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "57.00000 24.00000",
			"text" : "Stamp",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "stroke_type",
					"val" : "spray_can"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 365,
			"image" : "models/small_circle@2x.json",
			"name" : "Spray Can",
			"origin" : "166.00000 -2.20166 0.00000",
			"parent" : 360,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 366,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 365,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 367,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 365,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "93.00000 24.00000",
			"text" : "Spray Can",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn shared['currentBrush']['draw_mode'] != 'smear';\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "stroke_type",
					"val" : "line"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 368,
			"image" : "models/small_circle@2x.json",
			"name" : "Connected Line",
			"origin" : "311.19580 -2.20166 0.00000",
			"parent" : 360,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 369,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 368,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 370,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 368,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "138.00000 24.00000",
			"text" : "Connected Line",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "stroke_type",
					"val" : "evenly_spaced"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 371,
			"image" : "models/small_circle@2x.json",
			"name" : "Evenly Spaced",
			"origin" : "511.97876 -2.20166 0.00000",
			"parent" : 360,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 372,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 371,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 373,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 371,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "131.00000 24.00000",
			"text" : "Evenly Spaced",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 403,
			"name" : "General Brush Settings",
			"origin" : "100.00000 -86.00000 0.00000",
			"parent" : 358
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 408,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Size",
			"opaquebackground" : false,
			"origin" : "-40.00000 0.00000 0.00000",
			"padding" : 0,
			"parent" : 403,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "43.00000 24.00000",
			"text" : "Size:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 404,
			"image" : "models/util/solidlayer.json",
			"name" : "Size Slider",
			"origin" : "173.04742 -3.80957 0.00000",
			"parent" : 408,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 405,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nexport function shouldEnable() {\n\treturn true;\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared['currentBrush'][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? new Vec3(1.0, 1.0 , 1.0) : new Vec3(0.7, 0.7 , 0.7);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared['currentBrush'][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared['currentBrush'][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared['currentBrush'][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "size",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 404,
			"size" : "16.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 410,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Alpha",
			"opaquebackground" : false,
			"origin" : "346.76111 0.00000 0.00000",
			"padding" : 0,
			"parent" : 403,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "56.00000 24.00000",
			"text" : "Alpha:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 411,
			"image" : "models/util/solidlayer.json",
			"name" : "Alpha Slider",
			"origin" : "134.00000 -3.80957 0.00000",
			"parent" : 410,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 412,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nexport function shouldEnable() {\n\treturn true;\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared['currentBrush'][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? new Vec3(1.0, 1.0 , 1.0) : new Vec3(0.7, 0.7 , 0.7);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared['currentBrush'][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared['currentBrush'][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared['currentBrush'][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "alpha",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 411,
			"size" : "16.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 416,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Spacing",
			"opaquebackground" : false,
			"origin" : "718.20264 0.00000 0.00000",
			"padding" : 0,
			"parent" : 403,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "76.00000 24.00000",
			"text" : "Spacing:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 290,
			"image" : "models/util/solidlayer.json",
			"name" : "Spacing Slider",
			"origin" : "134.00000 -3.80957 0.00000",
			"parent" : 416,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 402,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nexport function shouldEnable() {\n\treturn shared['currentBrush']['stroke_type'] === \"evenly_spaced\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared['currentBrush'][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? new Vec3(1.0, 1.0 , 1.0) : new Vec3(0.7, 0.7 , 0.7);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared['currentBrush'][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared['currentBrush'][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared['currentBrush'][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "spacing",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 290,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 423,
			"name" : "Color Settings",
			"origin" : "100.00000 -137.00000 0.00000",
			"parent" : 358
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 424,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "H",
			"opaquebackground" : false,
			"origin" : "-40.00000 0.00000 0.00000",
			"padding" : 0,
			"parent" : 423,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "72.00000 24.00000",
			"text" : "Color H:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 425,
			"image" : "models/util/solidlayer.json",
			"name" : "Hue Slider",
			"origin" : "173.04742 -3.80969 0.00000",
			"parent" : 424,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 426,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nexport function shouldEnable() {\n\treturn shared['currentBrush']['draw_mode'] === \"paint\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared['currentBrush'][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? new Vec3(1.0, 1.0 , 1.0) : new Vec3(0.7, 0.7 , 0.7);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared['currentBrush'][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared['currentBrush'][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared['currentBrush'][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "hue",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 425,
			"size" : "16.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 427,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "S",
			"opaquebackground" : false,
			"origin" : "346.76111 0.00000 0.00000",
			"padding" : 0,
			"parent" : 423,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "18.00000 24.00000",
			"text" : "S:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 428,
			"image" : "models/util/solidlayer.json",
			"name" : "Saturation Slider",
			"origin" : "134.00000 -3.80957 0.00000",
			"parent" : 427,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 429,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nexport function shouldEnable() {\n\treturn shared['currentBrush']['draw_mode'] === \"paint\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared['currentBrush'][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? new Vec3(1.0, 1.0 , 1.0) : new Vec3(0.7, 0.7 , 0.7);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared['currentBrush'][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared['currentBrush'][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared['currentBrush'][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "saturation",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 428,
			"size" : "16.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 430,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "V",
			"opaquebackground" : false,
			"origin" : "718.20264 0.00000 0.00000",
			"padding" : 0,
			"parent" : 423,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "18.00000 24.00000",
			"text" : "V:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 431,
			"image" : "models/util/solidlayer.json",
			"name" : "Value Slider",
			"origin" : "134.00000 -3.80957 0.00000",
			"parent" : 430,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 432,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nexport function shouldEnable() {\n\treturn shared['currentBrush']['draw_mode'] === \"paint\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared['currentBrush'][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? new Vec3(1.0, 1.0 , 1.0) : new Vec3(0.7, 0.7 , 0.7);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared['currentBrush'][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared['currentBrush'][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared['currentBrush'][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "value",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 431,
			"size" : "16.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 440,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Brush",
			"opaquebackground" : false,
			"origin" : "60.00000 -188.00000 0.00000",
			"padding" : 0,
			"parent" : 358,
			"pointsize" : 5.0,
			"size" : "56.00000 24.00000",
			"text" : "Brush:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['texId'] = 0;\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "brush_type",
					"val" : "procedural"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 441,
			"image" : "models/small_circle@2x.json",
			"name" : "Procedural",
			"origin" : "63.00000 -2.20166 0.00000",
			"parent" : 440,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 464,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 441,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 465,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 441,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "94.00000 24.00000",
			"text" : "Procedural",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.30196 0.30196 0.30196",
			"id" : 522,
			"image" : "models/util/solidlayer.json",
			"name" : "Proc Settings BG",
			"origin" : "98.08533 -72.20172 0.00000",
			"parent" : 440,
			"scale" : "5.93693 1.25618 1.25618",
			"size" : "80.00000 80.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared['currentBrush']['brush_type'] === \"procedural\";\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 480,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Hardness",
			"opaquebackground" : false,
			"origin" : "53.24365 -42.35925 0.00000",
			"padding" : 0,
			"parent" : 440,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "90.00000 24.00000",
			"text" : "Hardness:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 481,
			"image" : "models/util/solidlayer.json",
			"name" : "Hardness Slider",
			"origin" : "121.38690 -52.11554 0.00000",
			"parent" : 480,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 482,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nexport function shouldEnable() {\n\treturn shared['currentBrush']['brush_type'] === \"procedural\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared['currentBrush'][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? new Vec3(1.0, 1.0 , 1.0) : new Vec3(0.7, 0.7 , 0.7);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared['currentBrush'][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared['currentBrush'][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared['currentBrush'][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "hardness",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 481,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar dot;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\nvar colorError = new Vec3(1.0, 0.0, 0.0);\n\nexport function shouldEnable() {\n\treturn shared['currentBrush']['stroke_type'] != 'line';\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdot = thisLayer.getChildren()[0];\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : (dot.visible ? colorError : colorDisabled);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared['currentBrush'][scriptProperties['key']] = scriptProperties['val'];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tdot.visible = shared['currentBrush'][scriptProperties['key']] == scriptProperties['val'];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "brush_type",
					"val" : "textures"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 466,
			"image" : "models/small_circle@2x.json",
			"name" : "Textures",
			"origin" : "409.87769 -2.20166 0.00000",
			"parent" : 440,
			"scale" : "0.70000 0.70000 0.70000",
			"size" : "32.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 467,
			"image" : "models/small_circle@2x.json",
			"name" : "Dot",
			"parent" : 466,
			"scale" : "0.50000 0.50000 0.50000",
			"size" : "32.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 468,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "26.59912 3.66943 0.00000",
			"padding" : 0,
			"parent" : 466,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "74.00000 24.00000",
			"text" : "Textures",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.30196 0.30196 0.30196",
			"id" : 491,
			"image" : "models/util/solidlayer.json",
			"name" : "Channel 0 BG",
			"origin" : "42.13728 -100.00000 0.00000",
			"parent" : 466,
			"scale" : "1.79454 1.79454 1.42857",
			"size" : "80.00000 80.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared['currentBrush']['brush_type'] === \"textures\" && shared['brushEditor']['texId'] == 0;\n}\n",
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 516,
			"image" : "models/util/solidlayer.json",
			"name" : "Channel 0",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(shared['currentBrush']['brush_type'] === 'textures') {\n\t\tshared['brushEditor']['texId'] = 0;\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n",
				"value" : "42.13728 -100.00000 0.00000"
			},
			"parent" : 466,
			"scale" : "1.42857 1.42857 1.42857",
			"size" : "80.00000 80.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.30196 0.30196 0.30196",
			"id" : 518,
			"image" : "models/util/solidlayer.json",
			"name" : "Channel 1 BG",
			"origin" : "228.69861 -100.00000 0.00000",
			"parent" : 466,
			"scale" : "2.92723 1.79454 1.79454",
			"size" : "80.00000 80.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared['currentBrush']['brush_type'] === \"textures\" && shared['brushEditor']['texId'] == 1;\n}\n",
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 493,
			"image" : "models/util/solidlayer.json",
			"name" : "Channel 1",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(shared['currentBrush']['brush_type'] === 'textures') {\n\t\tshared['brushEditor']['texId'] = 1;\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n",
				"value" : "181.22736 -100.00000 0.00000"
			},
			"parent" : 466,
			"scale" : "1.42857 1.42857 1.42857",
			"size" : "80.00000 80.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.30196 0.30196 0.30196",
			"id" : 520,
			"image" : "models/util/solidlayer.json",
			"name" : "Tex Settings BG",
			"origin" : "650.00000 -100.00000 0.00000",
			"parent" : 466,
			"scale" : "7.64657 1.79454 1.79454",
			"size" : "80.00000 80.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared['currentBrush']['brush_type'] === \"textures\";\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 495,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Probability",
			"opaquebackground" : false,
			"origin" : "497.60730 -56.35242 0.00000",
			"padding" : 0,
			"parent" : 466,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "95.00000 24.00000",
			"text" : "Probability:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 496,
			"image" : "models/util/solidlayer.json",
			"name" : "Value Slider",
			"origin" : "134.00000 -3.80957 0.00000",
			"parent" : 495,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 497,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\treturn shared['currentBrush']['brush_type'] === \"textures\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "probability",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 496,
			"size" : "16.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 501,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Influence",
			"opaquebackground" : false,
			"origin" : "497.60730 -128.23450 0.00000",
			"padding" : 0,
			"parent" : 466,
			"pointsize" : 5.0,
			"scale" : "1.50000 1.50000 1.50000",
			"size" : "84.00000 24.00000",
			"text" : "Influence:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 502,
			"image" : "models/util/solidlayer.json",
			"name" : "Value Slider",
			"origin" : "134.00000 -3.80957 0.00000",
			"parent" : 501,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 503,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\treturn shared['currentBrush']['brush_type'] === \"textures\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "influence",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 502,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.30196 0.30196 0.30196",
			"id" : 512,
			"image" : "models/util/solidlayer.json",
			"name" : "Tex Settings BG",
			"origin" : "529.00000 -442.00000 0.00000",
			"parent" : 358,
			"scale" : "0.60000 3.30060 1.25618",
			"size" : "2030.00000 80.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 285,
			"name" : "Blocks",
			"origin" : "-0.00024 4.12082 0.00000",
			"parent" : 512,
			"scale" : "1.66667 0.30297 0.79606"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 286,
			"name" : "Background",
			"origin" : "0.00000 97.00000 0.00000",
			"parent" : 285,
			"scale" : "1.00000 1.20000 0.99999"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.37647 0.37647 0.37647",
			"id" : 264,
			"image" : "models/util/solidlayer.json",
			"name" : "Tex Settings BG",
			"origin" : "-300.39087 -93.47833 0.00000",
			"parent" : 286,
			"scale" : "0.60000 3.11594 1.25619",
			"size" : "512.00000 60.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.37647 0.37647 0.37647",
			"id" : 318,
			"image" : "models/util/solidlayer.json",
			"name" : "Tex Settings BG",
			"origin" : "44.88904 -93.47833 0.00000",
			"parent" : 286,
			"scale" : "0.60000 3.11594 1.25619",
			"size" : "512.00000 60.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.37647 0.37647 0.37647",
			"id" : 326,
			"image" : "models/util/solidlayer.json",
			"name" : "Tex Settings BG",
			"origin" : "419.57996 -72.83289 0.00000",
			"parent" : 286,
			"scale" : "0.60000 2.42776 1.25619",
			"size" : "512.00000 60.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 313,
			"name" : "Text",
			"origin" : "0.00000 -36.83761 0.00000",
			"parent" : 285,
			"scale" : "1.00000 0.99999 0.99999"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 1.57080",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 294,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Baseline",
			"opaquebackground" : false,
			"origin" : "-440.83875 -82.31110 0.00000",
			"padding" : 0,
			"parent" : 313,
			"pointsize" : 5.0,
			"scale" : "1.05001 1.04999 1.05000",
			"size" : "75.00000 24.00000",
			"text" : "Baseline",
			"verticalalign" : "center"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 1.57080",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 319,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Jitter",
			"opaquebackground" : false,
			"origin" : "-95.55847 -82.31097 0.00000",
			"padding" : 0,
			"parent" : 313,
			"pointsize" : 5.0,
			"scale" : "1.05001 1.04999 1.05000",
			"size" : "43.00000 24.00000",
			"text" : "Jitter",
			"verticalalign" : "center"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 1.57080",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 327,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Velocity Influence",
			"opaquebackground" : false,
			"origin" : "279.13342 -34.63666 0.00000",
			"padding" : 0,
			"parent" : 313,
			"pointsize" : 5.0,
			"scale" : "1.05001 1.04999 1.05000",
			"size" : "151.00000 24.00000",
			"text" : "Velocity Influence",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 302,
			"name" : "Size Settings",
			"origin" : "-715.00061 24.88976 0.00000",
			"parent" : 512,
			"scale" : "1.66667 0.30297 0.79606"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 303,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Size",
			"opaquebackground" : false,
			"origin" : "-40.00000 0.00000 0.00000",
			"padding" : 0,
			"parent" : 302,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "43.00000 24.00000",
			"text" : "Size:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 305,
			"image" : "models/util/solidlayer.json",
			"name" : "Base Size Slider",
			"origin" : "173.04749 -3.80957 0.00000",
			"parent" : 303,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 306,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\tvar cb = shared.currentBrush;\n\treturn cb.brush_type != \"procedural\" && cb.stroke_type != \"stamp\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "size",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 305,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 311,
			"image" : "models/util/solidlayer.json",
			"name" : "Size Jitter Slider",
			"origin" : "487.46094 -4.00006 0.00000",
			"parent" : 302,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 312,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "size_jitter",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 311,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 314,
			"image" : "models/util/solidlayer.json",
			"name" : "Size Velocity Slider",
			"origin" : "858.90234 -4.00006 0.00000",
			"parent" : 302,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 315,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\tvar cb = shared.currentBrush;\n\treturn cb.stroke_type != \"stamp\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0,
					"key" : "size_vel",
					"leftVal" : -1,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 314,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 563,
			"name" : "Alpha Settings",
			"origin" : "-715.00061 8.84102 0.00000",
			"parent" : 512,
			"scale" : "1.66667 0.30297 0.79606"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 564,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Alpha",
			"opaquebackground" : false,
			"origin" : "-40.00000 0.00000 0.00000",
			"padding" : 0,
			"parent" : 563,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "56.00000 24.00000",
			"text" : "Alpha:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 567,
			"image" : "models/util/solidlayer.json",
			"name" : "Alpha Jitter Slider",
			"origin" : "487.46094 -4.00006 0.00000",
			"parent" : 563,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 568,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "alpha_jitter",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 567,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 569,
			"image" : "models/util/solidlayer.json",
			"name" : "Alpha Velocity Slider",
			"origin" : "858.90234 -4.00006 0.00000",
			"parent" : 563,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 570,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\tvar cb = shared.currentBrush;\n\treturn cb.stroke_type != \"stamp\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0,
					"key" : "alpha_vel",
					"leftVal" : -1,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 569,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 578,
			"name" : "Scatter Settings",
			"origin" : "-715.00061 -7.20769 0.00000",
			"parent" : 512,
			"scale" : "1.66667 0.30297 0.79606"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 579,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Scatter",
			"opaquebackground" : false,
			"origin" : "-40.00000 0.00000 0.00000",
			"padding" : 0,
			"parent" : 578,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "66.00000 24.00000",
			"text" : "Scatter:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 582,
			"image" : "models/util/solidlayer.json",
			"name" : "Scatter Jitter Slider",
			"origin" : "487.46094 -4.00006 0.00000",
			"parent" : 578,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 583,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\treturn true;\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0,
					"key" : "scatter_jitter",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 582,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 584,
			"image" : "models/util/solidlayer.json",
			"name" : "Scatter Velocity Slider",
			"origin" : "858.90234 -4.00006 0.00000",
			"parent" : 578,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 585,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\tvar cb = shared.currentBrush;\n\treturn cb.stroke_type != \"stamp\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0,
					"key" : "scatter_vel",
					"leftVal" : -1,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 584,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 593,
			"name" : "Rotation Settings",
			"origin" : "-715.00061 -23.25641 0.00000",
			"parent" : 512,
			"scale" : "1.66667 0.30297 0.79606"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 594,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Rotation",
			"opaquebackground" : false,
			"origin" : "-40.00000 0.00000 0.00000",
			"padding" : 0,
			"parent" : 593,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "78.00000 24.00000",
			"text" : "Rotation:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 595,
			"image" : "models/util/solidlayer.json",
			"name" : "Base Size Slider",
			"origin" : "173.04749 -3.80957 0.00000",
			"parent" : 594,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 596,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\tvar cb = shared.currentBrush;\n\treturn cb.brush_type != \"procedural\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "rot",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 595,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 597,
			"image" : "models/util/solidlayer.json",
			"name" : "Size Jitter Slider",
			"origin" : "487.46094 -4.00006 0.00000",
			"parent" : 593,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 598,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\tvar cb = shared.currentBrush;\n\treturn cb.brush_type != 'procedural';\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\t\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? colorDefault : colorDisabled;\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "rot_jitter",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 597,
			"size" : "16.00000 32.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Key',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar enabled = false;\nvar check;\n\nvar colorDefault = new Vec3(1.0, 1.0, 1.0);\nvar colorDisabled = new Vec3(0.6, 0.6, 0.6);\n\nexport function shouldEnable() {\n\tvar cb = shared.currentBrush;\n\treturn cb.brush_type != 'procedural' && cb.stroke_type != 'stamp';\n}\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tcheck = thisLayer.getChildren()[0];\n\t\n\tfor(var i = 0; i < shared.brushEditor.texCnt; i++) {\n\t\tshared.currentBrush.tex[i][scriptProperties['key']] = true;\n\t}\n\n\trefresh();\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\treturn enabled ? colorDefault : colorDisabled;\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(enabled) {\n\t\tshared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']] = !shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n\t\tshared['brushEditor']['changed'] = true;\t// enqueue event\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\tcheck.visible = shared.currentBrush.tex[shared.brushEditor.texId][scriptProperties['key']];\n}\n\n",
				"scriptproperties" : 
				{
					"key" : "rot_lock"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 613,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : "710.60278 -13.30109 0.00000",
			"parent" : 593,
			"size" : "23.00000 23.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 354,
			"image" : "models/util/solidlayer.json",
			"name" : "Check",
			"parent" : 613,
			"scale" : "0.61604 0.61604 0.61604",
			"size" : "23.00000 23.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "left",
			"id" : 609,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "18.61926 2.56866 0.00000",
			"padding" : 0,
			"parent" : 613,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05002 1.05000",
			"size" : "206.00000 24.00000",
			"text" : "Lock to Stroke Direction",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 316,
			"name" : "Velocity Bounds Settings",
			"origin" : "100.00000 -604.40918 0.00000",
			"parent" : 358
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 317,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Lower Bound",
			"opaquebackground" : false,
			"origin" : "111.14282 0.00000 0.00000",
			"padding" : 0,
			"parent" : 316,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "223.00000 24.00000",
			"text" : "Lower Velocity Threshold:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 320,
			"image" : "models/util/solidlayer.json",
			"name" : "Lo Vel Slider",
			"origin" : "135.77576 -3.80969 0.00000",
			"parent" : 317,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 321,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nexport function shouldEnable() {\n\treturn shared.currentBrush['stroke_type'] != \"stamp\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared['currentBrush'][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? new Vec3(1.0, 1.0 , 1.0) : new Vec3(0.7, 0.7 , 0.7);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared['currentBrush'][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared['currentBrush'][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared['currentBrush'][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 0,
					"key" : "lo_vel",
					"leftVal" : 0,
					"rightVal" : 10
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 320,
			"size" : "16.00000 32.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"font" : "systemfont_arial",
			"horizontalalign" : "right",
			"id" : 328,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Upper Bound",
			"opaquebackground" : false,
			"origin" : "700.32727 0.00000 0.00000",
			"padding" : 0,
			"parent" : 316,
			"pointsize" : 5.0,
			"scale" : "1.05000 1.05000 1.05000",
			"size" : "223.00000 24.00000",
			"text" : "Upper Velocity Threshold:",
			"verticalalign" : "center"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 332,
			"image" : "models/util/solidlayer.json",
			"name" : "Hi Vel Slider",
			"origin" : "134.00000 -3.80957 0.00000",
			"parent" : 328,
			"scale" : "0.95238 0.95238 0.95238",
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 333,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar enabled = false;\nvar pxSize;\nvar range01;\n\nexport function shouldEnable() {\n\treturn shared.currentBrush['stroke_type'] != \"stamp\";\n}\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared['currentBrush'][scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\trefresh();\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(shared['brushEditor']['hasChanged']) {\n\t\trefresh();\n\t}\n\n\tthisLayer.color = enabled ? new Vec3(1.0, 1.0 , 1.0) : new Vec3(0.7, 0.7 , 0.7);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible() || !enabled) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared['currentBrush'][scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t\tshared['brushEditor']['changed'] = true;\n\t}\n}\n\nexport function refresh() {\n\tenabled = shouldEnable();\n\t\n\tvar val = shared['currentBrush'][scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared['currentBrush'][scriptProperties['key']] = val;\n\n\trange01 = (val - minV) / (maxV - minV);\n}\n\n",
				"scriptproperties" : 
				{
					"default" : 5,
					"key" : "hi_vel",
					"leftVal" : 0,
					"rightVal" : 10
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 332,
			"size" : "16.00000 32.00000"
		},
		{
			"id" : 190,
			"locktransforms" : true,
			"name" : "Paint Controls",
			"origin" : "1280.00000 720.00000 0.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 171,
			"name" : "Tool Selection",
			"origin" : "1150.00000 400.00000 0.00000",
			"parent" : 190,
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared[\"showUi\"];\n}\n",
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addText({\n\t\tname: 'key2',\n\t\tlabel: 'Property 2',\n\t\tvalue: 'baz'\n\t})\n\t.addText({\n\t\tname: 'val2',\n\t\tlabel: 'Value 2',\n\t\tvalue: 'qux'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'persistent',\n\t\tlabel: 'Persistent',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"persistent\"]) {\n\t\t\n\t\tvar val = localStorage.get(scriptProperties[\"key\"]);\n\t\tvar val2 = localStorage.get(scriptProperties[\"key2\"]);\n\t\tif(typeof val === 'undefined') {\n\t\t\tif(scriptProperties[\"isDefault\"]) {\n\t\t\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\t\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t\t\t}\n\t\t}else {\n\t\t\tshared[scriptProperties[\"key\"]] = val;\n\t\t\tshared[scriptProperties[\"key2\"]] = val2;\n\t\t}\n\n\t}else if(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t}\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn (shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] && shared[scriptProperties[\"key2\"]] == scriptProperties[\"val2\"]) ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\tif(scriptProperties[\"persistent\"]) {\n\t\tlocalStorage.set(scriptProperties[\"key\"], scriptProperties[\"val\"]);\n\t\tlocalStorage.set(scriptProperties[\"key2\"], scriptProperties[\"val2\"]);\n\t}\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawMode",
					"key2" : "drawInfluence",
					"persistent" : true,
					"val" : "brush",
					"val2" : "line"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 208,
			"image" : "models/Brush_small.json",
			"name" : "Brush",
			"origin" : "0.00000 200.00000 0.00000",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addText({\n\t\tname: 'key2',\n\t\tlabel: 'Property 2',\n\t\tvalue: 'baz'\n\t})\n\t.addText({\n\t\tname: 'val2',\n\t\tlabel: 'Value 2',\n\t\tvalue: 'qux'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'persistent',\n\t\tlabel: 'Persistent',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"persistent\"]) {\n\t\t\n\t\tvar val = localStorage.get(scriptProperties[\"key\"]);\n\t\tvar val2 = localStorage.get(scriptProperties[\"key2\"]);\n\t\tif(typeof val === 'undefined') {\n\t\t\tif(scriptProperties[\"isDefault\"]) {\n\t\t\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\t\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t\t\t}\n\t\t}else {\n\t\t\tshared[scriptProperties[\"key\"]] = val;\n\t\t\tshared[scriptProperties[\"key2\"]] = val2;\n\t\t}\n\n\t}else if(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t}\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn (shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] && shared[scriptProperties[\"key2\"]] == scriptProperties[\"val2\"]) ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\tif(scriptProperties[\"persistent\"]) {\n\t\tlocalStorage.set(scriptProperties[\"key\"], scriptProperties[\"val\"]);\n\t\tlocalStorage.set(scriptProperties[\"key2\"], scriptProperties[\"val2\"]);\n\t}\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : true,
					"key" : "drawMode",
					"key2" : "drawInfluence",
					"persistent" : true,
					"val" : "brush",
					"val2" : "spray"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 109,
			"image" : "models/Spray@0.5x.json",
			"name" : "Spray",
			"origin" : "-175.00000 200.00000 0.00000",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addText({\n\t\tname: 'key2',\n\t\tlabel: 'Property 2',\n\t\tvalue: 'baz'\n\t})\n\t.addText({\n\t\tname: 'val2',\n\t\tlabel: 'Value 2',\n\t\tvalue: 'qux'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'persistent',\n\t\tlabel: 'Persistent',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"persistent\"]) {\n\t\t\n\t\tvar val = localStorage.get(scriptProperties[\"key\"]);\n\t\tvar val2 = localStorage.get(scriptProperties[\"key2\"]);\n\t\tif(typeof val === 'undefined') {\n\t\t\tif(scriptProperties[\"isDefault\"]) {\n\t\t\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\t\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t\t\t}\n\t\t}else {\n\t\t\tshared[scriptProperties[\"key\"]] = val;\n\t\t\tshared[scriptProperties[\"key2\"]] = val2;\n\t\t}\n\n\t}else if(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t}\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn (shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] && shared[scriptProperties[\"key2\"]] == scriptProperties[\"val2\"]) ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\tif(scriptProperties[\"persistent\"]) {\n\t\tlocalStorage.set(scriptProperties[\"key\"], scriptProperties[\"val\"]);\n\t\tlocalStorage.set(scriptProperties[\"key2\"], scriptProperties[\"val2\"]);\n\t}\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawMode",
					"key2" : "drawInfluence",
					"persistent" : true,
					"val" : "blend",
					"val2" : "line"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 325,
			"image" : "models/PatterbBrush@0.5x.json",
			"name" : "Pattern Brush",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addText({\n\t\tname: 'key2',\n\t\tlabel: 'Property 2',\n\t\tvalue: 'baz'\n\t})\n\t.addText({\n\t\tname: 'val2',\n\t\tlabel: 'Value 2',\n\t\tvalue: 'qux'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'persistent',\n\t\tlabel: 'Persistent',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"persistent\"]) {\n\t\t\n\t\tvar val = localStorage.get(scriptProperties[\"key\"]);\n\t\tvar val2 = localStorage.get(scriptProperties[\"key2\"]);\n\t\tif(typeof val === 'undefined') {\n\t\t\tif(scriptProperties[\"isDefault\"]) {\n\t\t\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\t\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t\t\t}\n\t\t}else {\n\t\t\tshared[scriptProperties[\"key\"]] = val;\n\t\t\tshared[scriptProperties[\"key2\"]] = val2;\n\t\t}\n\n\t}else if(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t}\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn (shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] && shared[scriptProperties[\"key2\"]] == scriptProperties[\"val2\"]) ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\tif(scriptProperties[\"persistent\"]) {\n\t\tlocalStorage.set(scriptProperties[\"key\"], scriptProperties[\"val\"]);\n\t\tlocalStorage.set(scriptProperties[\"key2\"], scriptProperties[\"val2\"]);\n\t}\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawMode",
					"key2" : "drawInfluence",
					"persistent" : true,
					"val" : "blend",
					"val2" : "spray"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 239,
			"image" : "models/PatternSpray@0.5x.json",
			"name" : "Pattern Spray",
			"origin" : "-175.00000 0.00000 0.00000",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'persistent',\n\t\tlabel: 'Persistent',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"persistent\"]) {\n\t\t\n\t\tvar val = localStorage.get(scriptProperties[\"key\"]);\n\t\tif(typeof val === 'undefined') {\n\t\t\tif(scriptProperties[\"isDefault\"]) {\n\t\t\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\t\t}\n\t\t}else {\n\t\t\tshared[scriptProperties[\"key\"]] = val;\n\t\t}\n\n\t}else if(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t}\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\tif(scriptProperties[\"persistent\"]) {\n\t\tlocalStorage.set(scriptProperties[\"key\"], scriptProperties[\"val\"]);\n\t}\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawMode",
					"persistent" : true,
					"val" : "colorCpy"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 193,
			"image" : "models/PaintRoller@0.5x.json",
			"name" : "Color Copy Brush",
			"origin" : "0.00000 -200.00000 0.00000",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'persistent',\n\t\tlabel: 'Persistent',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"persistent\"]) {\n\t\t\n\t\tvar val = localStorage.get(scriptProperties[\"key\"]);\n\t\tif(typeof val === 'undefined') {\n\t\t\tif(scriptProperties[\"isDefault\"]) {\n\t\t\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\t\t}\n\t\t}else {\n\t\t\tshared[scriptProperties[\"key\"]] = val;\n\t\t}\n\n\t}else if(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t}\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\tif(scriptProperties[\"persistent\"]) {\n\t\tlocalStorage.set(scriptProperties[\"key\"], scriptProperties[\"val\"]);\n\t}\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawMode",
					"persistent" : true,
					"val" : "smear"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 257,
			"image" : "models/smear@0.5x.json",
			"name" : "Smear",
			"origin" : "-175.00000 -200.00000 0.00000",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addText({\n\t\tname: 'key2',\n\t\tlabel: 'Property 2',\n\t\tvalue: 'baz'\n\t})\n\t.addText({\n\t\tname: 'val2',\n\t\tlabel: 'Value 2',\n\t\tvalue: 'qux'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'persistent',\n\t\tlabel: 'Persistent',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"persistent\"]) {\n\t\t\n\t\tvar val = localStorage.get(scriptProperties[\"key\"]);\n\t\tvar val2 = localStorage.get(scriptProperties[\"key2\"]);\n\t\tif(typeof val === 'undefined') {\n\t\t\tif(scriptProperties[\"isDefault\"]) {\n\t\t\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\t\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t\t\t}\n\t\t}else {\n\t\t\tshared[scriptProperties[\"key\"]] = val;\n\t\t\tshared[scriptProperties[\"key2\"]] = val2;\n\t\t}\n\n\t}else if(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t}\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn (shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] && shared[scriptProperties[\"key2\"]] == scriptProperties[\"val2\"]) ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\tif(scriptProperties[\"persistent\"]) {\n\t\tlocalStorage.set(scriptProperties[\"key\"], scriptProperties[\"val\"]);\n\t\tlocalStorage.set(scriptProperties[\"key2\"], scriptProperties[\"val2\"]);\n\t}\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawMode",
					"key2" : "drawInfluence",
					"persistent" : true,
					"val" : "erase",
					"val2" : "line"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 195,
			"image" : "models/EraseBrush@0.5x.json",
			"name" : "Erase Brush",
			"origin" : "0.00000 -400.00000 0.00000",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addText({\n\t\tname: 'key2',\n\t\tlabel: 'Property 2',\n\t\tvalue: 'baz'\n\t})\n\t.addText({\n\t\tname: 'val2',\n\t\tlabel: 'Value 2',\n\t\tvalue: 'qux'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'persistent',\n\t\tlabel: 'Persistent',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"persistent\"]) {\n\t\t\n\t\tvar val = localStorage.get(scriptProperties[\"key\"]);\n\t\tvar val2 = localStorage.get(scriptProperties[\"key2\"]);\n\t\tif(typeof val === 'undefined') {\n\t\t\tif(scriptProperties[\"isDefault\"]) {\n\t\t\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\t\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t\t\t}\n\t\t}else {\n\t\t\tshared[scriptProperties[\"key\"]] = val;\n\t\t\tshared[scriptProperties[\"key2\"]] = val2;\n\t\t}\n\n\t}else if(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\t}\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn (shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] && shared[scriptProperties[\"key2\"]] == scriptProperties[\"val2\"]) ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\tshared[scriptProperties[\"key2\"]] = scriptProperties[\"val2\"];\n\tif(scriptProperties[\"persistent\"]) {\n\t\tlocalStorage.set(scriptProperties[\"key\"], scriptProperties[\"val\"]);\n\t\tlocalStorage.set(scriptProperties[\"key2\"], scriptProperties[\"val2\"]);\n\t}\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawMode",
					"key2" : "drawInfluence",
					"persistent" : true,
					"val" : "erase",
					"val2" : "spray"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 200,
			"image" : "models/EraseSpray@0.5x.json",
			"name" : "Erase Spray",
			"origin" : "-175.00000 -400.00000 0.00000",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t}\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "cmd",
					"val" : "undo"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 287,
			"image" : "models/Undo@0.5x.json",
			"name" : "Undo",
			"origin" : "0.00000 -600.00000 0.00000",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 696,
			"image" : "models/BrushEditor@0.5x.json",
			"name" : "Toggle Brush Editor",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(!isVisible()) {return;}\n\tshared.brushEditor.visible = !shared.brushEditor.visible;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"value" : "-175.00000 -600.00000 0.00000"
			},
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t}\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "cmd",
					"val" : "blend"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 233,
			"image" : "models/UsePattern@0.5x.json",
			"name" : "UsePattern",
			"origin" : "-175.00000 -800.00000 0.00000",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Value',\n\t\tvalue: 'bar'\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Default Option on Startup',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"isDefault\"]) {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n\t}\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"] ? new Vec3(0., 1., 0.) : new Vec3(1., 1., 1.);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = scriptProperties[\"val\"];\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}",
				"scriptproperties" : 
				{
					"isDefault" : true,
					"key" : "cmd",
					"val" : "reset"
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 216,
			"image" : "models/Reset_small.json",
			"name" : "Reset",
			"origin" : "0.00000 -800.00000 0.00000",
			"parent" : 171,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 345,
			"name" : "Tool Options",
			"origin" : "-1000.00000 -600.00000 0.00000",
			"parent" : 190,
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared[\"showUi\"];\n}\n",
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 191,
			"image" : "models/util/solidlayer.json",
			"name" : "Radius Slider",
			"parent" : 345,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 120,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"parent" : 191,
			"size" : "250.00000 2.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 154,
			"image" : "models/Scale@0.15x.json",
			"name" : "Scale@0.15x",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar pxSize;\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared[scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tvar val = shared[scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared[scriptProperties['key']] = val;\n\n\tvar range01 = (val - minV) / (maxV - minV);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared[scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t}\n}\n",
				"scriptproperties" : 
				{
					"default" : 0.25,
					"key" : "drawSize",
					"leftVal" : 0.050000001,
					"rightVal" : 0.5
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 191,
			"size" : "77.00000 77.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 207,
			"image" : "models/util/solidlayer.json",
			"name" : "Feather Slider",
			"origin" : "400.00000 0.00000 0.00000",
			"parent" : 345,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 199,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"parent" : 207,
			"size" : "250.00000 2.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 158,
			"image" : "models/Hardness@0.15x.json",
			"name" : "Hardness@0.15x",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar pxSize;\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared[scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tvar val = shared[scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared[scriptProperties['key']] = val;\n\n\tvar range01 = (val - minV) / (maxV - minV);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared[scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t}\n}\n",
				"scriptproperties" : 
				{
					"default" : 0.5,
					"key" : "drawFeather",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 207,
			"size" : "77.00000 77.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 615,
			"image" : "models/util/solidlayer.json",
			"name" : "Alpha Slider",
			"origin" : "800.00000 0.00000 0.00000",
			"parent" : 345,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 255,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"parent" : 615,
			"size" : "250.00000 2.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 162,
			"image" : "models/Alpha@0.15x.json",
			"name" : "Alpha@0.15x",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar pxSize;\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared[scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tvar val = shared[scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared[scriptProperties['key']] = val;\n\n\tvar range01 = (val - minV) / (maxV - minV);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared[scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t}\n}\n",
				"scriptproperties" : 
				{
					"default" : 0.5,
					"key" : "drawAlpha",
					"leftVal" : 0.001,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 615,
			"size" : "77.00000 77.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 268,
			"image" : "models/util/solidlayer.json",
			"name" : "Brush Spacing Slider",
			"origin" : "800.00000 120.76624 0.00000",
			"parent" : 345,
			"size" : "256.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 269,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"parent" : 268,
			"size" : "250.00000 2.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 270,
			"image" : "models/Alpha@0.15x.json",
			"name" : "Alpha@0.15x",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar pxSize;\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tshared[scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\tpxSize = thisLayer.getParent().size.x;\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tvar val = shared[scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared[scriptProperties['key']] = val;\n\n\tvar range01 = (val - minV) / (maxV - minV);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!thisLayer.visible || !thisLayer.getParent().visible) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared[scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t}\n}\n",
				"scriptproperties" : 
				{
					"default" : 0.1,
					"key" : "brushSpacing",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 268,
			"size" : "77.00000 77.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 177,
			"name" : "Color Pickers",
			"origin" : "1200.00000 0.00000 0.00000",
			"parent" : 345,
			"visible" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'val',\n\t\tlabel: 'Enable On Value',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared[scriptProperties[\"key\"]] == scriptProperties[\"val\"];\n}\n",
				"scriptproperties" : 
				{
					"key" : "drawMode",
					"val" : "brush"
				},
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 346,
			"image" : "models/util/solidlayer.json",
			"name" : "BW Slider",
			"parent" : 177,
			"size" : "256.00000 8.00000",
			"visible" : false
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 261,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"parent" : 346,
			"size" : "250.00000 2.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 211,
			"image" : "models/Height@0.15x.json",
			"name" : "Height@0.15x",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\nimport * as WEColor from 'WEColor';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: 0,\n\t\tmax: 1,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar pxSize;\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tvar val = clamp(scriptProperties['default'], 0, 1);\n\tshared[scriptProperties['key']] = WEColor.hsv2rgb(new Vec3(0, 0, val));\n\tpxSize = thisLayer.getParent().size.x;\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tif(!isVisible()) {return value;}\n\tvar val = shared[scriptProperties['key']];\n\tvar hsv = WEColor.rgb2hsv(val);\n\t\n\n\tval = clamp(hsv.z, 0, 1);\n\tshared[scriptProperties['key']] = WEColor.hsv2rgb(new Vec3(hsv.x, hsv.y, val));\n\n\treturn new Vec3(\n\t\t(val - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible()) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\tvar val = (xpos / pxSize) + 0.5;\n\t\tvar hsv = WEColor.rgb2hsv(shared[scriptProperties['key']]);\n\n\t\tshared[scriptProperties['key']] = WEColor.hsv2rgb(new Vec3(hsv.x, hsv.y, val)); \n\t}\n}\n",
				"scriptproperties" : 
				{
					"default" : 0.5,
					"key" : "drawColor"
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 346,
			"size" : "77.00000 77.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 186,
			"name" : "HSV Picker",
			"origin" : "120.00000 0.00000 0.00000",
			"parent" : 177,
			"visible" : false
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 213,
			"image" : "models/util/solidlayer.json",
			"name" : "V Slider",
			"parent" : 186,
			"size" : "512.00000 8.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"id" : 266,
			"image" : "models/util/solidlayer.json",
			"name" : "Solid",
			"parent" : 213,
			"size" : "506.00000 2.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 214,
			"image" : "models/Brightness@0.15x.json",
			"name" : "Alpha@0.15x",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'leftVal',\n\t\tlabel: 'Left Value',\n\t\tvalue: 0,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'rightVal',\n\t\tlabel: 'Right Value',\n\t\tvalue: 1,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'default',\n\t\tlabel: 'Start Value',\n\t\tvalue: 0.5,\n\t\tmin: -100,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar pxSize;\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tif(isVisible()) {\n\t\tshared[scriptProperties['key']] = clamp(scriptProperties['default'], scriptProperties['leftVal'], scriptProperties['rightVal']);\n\t}\n\tpxSize = thisLayer.getParent().size.x;\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\tvar val = shared[scriptProperties['key']];\n\tvar minV = scriptProperties['leftVal'];\n\tvar maxV = scriptProperties['rightVal'];\n\n\tval = clamp(val, minV, maxV);\n\tshared[scriptProperties['key']] = val;\n\n\tvar range01 = (val - minV) / (maxV - minV);\n\n\treturn new Vec3(\n\t\t(range01 - 0.5) * pxSize,\n\t\tvalue.y,\n\t\tvalue.z\n\t);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = false;\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible()) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t\n\n\t\tshared[scriptProperties['key']] = WEMath.mix(\n\t\t\tscriptProperties['leftVal'],\n\t\t\tscriptProperties['rightVal'],\n\t\t\t(xpos / pxSize) + 0.5\n\t\t);\n\t}\n}\n",
				"scriptproperties" : 
				{
					"default" : 1,
					"key" : "drawColorValue",
					"leftVal" : 0,
					"rightVal" : 1
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"parent" : 213,
			"size" : "77.00000 77.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"effects" : 
			[
				{
					"file" : "effects/hsv_preview_2d/effect.json",
					"id" : 180,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"Hue / Saturation" : 
								{
									"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\nimport * as WEColor from 'WEColor';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Setting Name',\n\t\tvalue: 'foo'\n\t})\n\t.addText({\n\t\tname: 'vKey',\n\t\tlabel: 'Value Setting Name',\n\t\tvalue: 'bar'\n\t})\n\t.finish();\n\nvar grabbed = false;\nvar pxSize;\n\nvar lastFrameRgb;\nvar lastFrameValue;\n\nfunction clamp(val, a, b) {\n\treturn Math.min(\n\t\tMath.max(\n\t\t\tval,\n\t\t\tMath.min(a,b)\n\t\t),\n\t\tMath.max(a,b)\n\t);\n}\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * @param {Vec2} value - for property 'Hue / Saturation'\n * @return {Vec2} - update current property value\n */\nexport function init(value) {\n\tif(isVisible()) {\n\t\tshared[scriptProperties['key']] = WEColor.hsv2rgb(new Vec3(value.x, value.y, shared[scriptProperties[\"vKey\"]]));\n\t}\n\tpxSize = thisLayer.size;\n\n\tlastFrameRgb = shared[scriptProperties['key']];\n\tlastFrameValue = shared[scriptProperties['vKey']];\n\treturn value;\n}\n\n/**\n * @param {Vec2} value - for property 'Hue / Saturation'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tif(!isVisible()) {\n\t\tlastFrameRgb = shared[scriptProperties['key']];\n\t\tlastFrameValue = shared[scriptProperties['vKey']];\n\t\treturn lastFrameValue;\n\t}\n\tvar rgb = shared[scriptProperties[\"key\"]];\n\tvar hsv = WEColor.rgb2hsv(rgb);\n\n\tif(lastFrameValue != shared[scriptProperties[\"vKey\"]]) {\n\t\thsv = new Vec3(hsv.x, hsv.y, shared[scriptProperties[\"vKey\"]]);\n\t\tshared[scriptProperties[\"key\"]] = WEColor.hsv2rgb(hsv);\n\t}else if(lastFrameRgb != rgb) {\n\t\tshared[scriptProperties[\"vKey\"]] = WEColor.rgb2hsv(rgb).z;\n\t}\n\t\n\tlastFrameRgb = shared[scriptProperties['key']];\n\tlastFrameValue = shared[scriptProperties['vKey']];\n\treturn new Vec2(hsv.x, hsv.y);\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = false;\n\t\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorDown(event) {\n\tif(!isVisible()) {return;}\n\tgrabbed = true;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorMove(event) {\n\tif(!isVisible()) {return;}\n\tif(grabbed) {\n\t\tif(!input.cursorLeftDown) {\n\t\t\tgrabbed = false;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar hsv = new Vec3(\n\t\t\tclamp(event.localPosition.x / pxSize.x, 0, 1),\n\t\t\tclamp(1. - event.localPosition.y / pxSize.y, 0., 1),\n\t\t\tshared[scriptProperties[\"vKey\"]]\n\t\t);\n\n\t\t//var xpos = clamp(thisLayer.origin.x - thisLayer.size.x / 2. + event.localPosition.x, pxSize/2., -pxSize/2.);\n\t\t//var val = (xpos / pxSize) + 0.5;\n\n\t\tshared[scriptProperties['key']] = WEColor.hsv2rgb(hsv); \n\t}\n}\n",
									"scriptproperties" : 
									{
										"key" : "drawColor",
										"vKey" : "drawColorValue"
									},
									"value" : "0.50000 0.50000"
								},
								"My new linked sliders" : "0.5 0.5",
								"Selection Rim" : 0.38,
								"Selection Size" : 0.027000001,
								"Value" : 
								{
									"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'foo'\n\t})\n\t.finish();\n\n/**\n * @param {Number} value - for property 'Draw Radius'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\treturn shared[scriptProperties['key']];\n}\n",
									"scriptproperties" : 
									{
										"key" : "drawColorValue"
									},
									"value" : 1
								}
							},
							"id" : 183
						}
					],
					"visible" : true
				}
			],
			"id" : 178,
			"image" : "models/util/solidlayer.json",
			"name" : "HS Selection",
			"origin" : "0.00000 200.00000 0.00000",
			"parent" : 186,
			"size" : "512.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 174,
			"name" : "Sample Colors",
			"origin" : "120.00000 0.00000 0.00000",
			"parent" : 177
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "1.00000 0.92549 0.31765",
			"id" : 185,
			"image" : "models/util/solidlayer.json",
			"name" : "ColorBttn A",
			"origin" : "-150.00000 0.00000 0.00000",
			"parent" : 174,
			"size" : "80.00000 80.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'foo'\n\t})\n\t.addColor({\n\t\tname: 'onColor',\n\t\tlabel: 'Frame Color When Selected',\n\t\tvalue: new Vec3(0.25, 0.25, 0.25)\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Select On Startup',\n\t\tvalue: false\n\t})\n\t.finish();\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\nfunction myColor() {\n\treturn thisLayer.getParent().color;\n}\n\nvar offColor;\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\toffColor = value;\n\tif(scriptProperties[\"isDefault\"] && isVisible()) {\n\t\tshared[scriptProperties[\"key\"]] = myColor();\n\t}\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared[scriptProperties[\"key\"]].subtract(myColor()).length() < 1./256. ? scriptProperties[\"onColor\"] : offColor;\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = false;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!isVisible()) {return;}\n\tshared[scriptProperties[\"key\"]] = myColor();\n}\n\n",
				"scriptproperties" : 
				{
					"isDefault" : true,
					"key" : "drawColor",
					"onColor" : "0.09019607843137255 0.09019607843137255 0.09019607843137255"
				},
				"value" : "0.18824 0.18824 0.18824"
			},
			"id" : 179,
			"image" : "models/ColorBtnFrame@0.5x.json",
			"name" : "ColorBtnFrame@0.5x",
			"parent" : 185,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.94510 0.31765 0.32157",
			"id" : 188,
			"image" : "models/util/solidlayer.json",
			"name" : "ColorBttn B",
			"parent" : 174,
			"size" : "80.00000 80.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'foo'\n\t})\n\t.addColor({\n\t\tname: 'onColor',\n\t\tlabel: 'Frame Color When Selected',\n\t\tvalue: new Vec3(0.25, 0.25, 0.25)\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Select On Startup',\n\t\tvalue: false\n\t})\n\t.finish();\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\nfunction myColor() {\n\treturn thisLayer.getParent().color;\n}\n\nvar offColor;\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\toffColor = value;\n\tif(scriptProperties[\"isDefault\"] && isVisible()) {\n\t\tshared[scriptProperties[\"key\"]] = myColor();\n\t}\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared[scriptProperties[\"key\"]].subtract(myColor()).length() < 1./256. ? scriptProperties[\"onColor\"] : offColor;\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = false;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!isVisible()) {return;}\n\tshared[scriptProperties[\"key\"]] = myColor();\n}\n\n",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawColor",
					"onColor" : "0.09019607843137255 0.09019607843137255 0.09019607843137255"
				},
				"value" : "0.18824 0.18824 0.18824"
			},
			"id" : 189,
			"image" : "models/ColorBtnFrame@0.5x.json",
			"name" : "ColorBtnFrame@0.5x",
			"parent" : 188,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.00000 0.12941 0.27843",
			"id" : 196,
			"image" : "models/util/solidlayer.json",
			"name" : "ColorBttn C",
			"origin" : "150.00000 0.00000 0.00000",
			"parent" : 174,
			"size" : "80.00000 80.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'foo'\n\t})\n\t.addColor({\n\t\tname: 'onColor',\n\t\tlabel: 'Frame Color When Selected',\n\t\tvalue: new Vec3(0.25, 0.25, 0.25)\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Select On Startup',\n\t\tvalue: false\n\t})\n\t.finish();\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\nfunction myColor() {\n\treturn thisLayer.getParent().color;\n}\n\nvar offColor;\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\toffColor = value;\n\tif(scriptProperties[\"isDefault\"] && isVisible()) {\n\t\tshared[scriptProperties[\"key\"]] = myColor();\n\t}\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared[scriptProperties[\"key\"]].subtract(myColor()).length() < 1./256. ? scriptProperties[\"onColor\"] : offColor;\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = false;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!isVisible()) {return;}\n\tshared[scriptProperties[\"key\"]] = myColor();\n}\n\n",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawColor",
					"onColor" : "0.09019607843137255 0.09019607843137255 0.09019607843137255"
				},
				"value" : "0.18824 0.18824 0.18824"
			},
			"id" : 197,
			"image" : "models/ColorBtnFrame@0.5x.json",
			"name" : "ColorBtnFrame@0.5x",
			"parent" : 196,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.46667 0.46275 0.73725",
			"id" : 204,
			"image" : "models/util/solidlayer.json",
			"name" : "ColorBttn D",
			"origin" : "300.00000 0.00000 0.00000",
			"parent" : 174,
			"size" : "80.00000 80.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'foo'\n\t})\n\t.addColor({\n\t\tname: 'onColor',\n\t\tlabel: 'Frame Color When Selected',\n\t\tvalue: new Vec3(0.25, 0.25, 0.25)\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Select On Startup',\n\t\tvalue: false\n\t})\n\t.finish();\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\nfunction myColor() {\n\treturn thisLayer.getParent().color;\n}\n\nvar offColor;\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\toffColor = value;\n\tif(scriptProperties[\"isDefault\"] && isVisible()) {\n\t\tshared[scriptProperties[\"key\"]] = myColor();\n\t}\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared[scriptProperties[\"key\"]].subtract(myColor()).length() < 1./256. ? scriptProperties[\"onColor\"] : offColor;\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = false;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!isVisible()) {return;}\n\tshared[scriptProperties[\"key\"]] = myColor();\n}\n\n",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawColor",
					"onColor" : "0.09019607843137255 0.09019607843137255 0.09019607843137255"
				},
				"value" : "0.18824 0.18824 0.18824"
			},
			"id" : 205,
			"image" : "models/ColorBtnFrame@0.5x.json",
			"name" : "ColorBtnFrame@0.5x",
			"parent" : 204,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.51765 0.70980 0.62353",
			"id" : 210,
			"image" : "models/util/solidlayer.json",
			"name" : "ColorBttn E",
			"origin" : "450.00000 0.00000 0.00000",
			"parent" : 174,
			"size" : "80.00000 80.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property Name',\n\t\tvalue: 'foo'\n\t})\n\t.addColor({\n\t\tname: 'onColor',\n\t\tlabel: 'Frame Color When Selected',\n\t\tvalue: new Vec3(0.25, 0.25, 0.25)\n\t})\n\t.addCheckbox({\n\t\tname: 'isDefault',\n\t\tlabel: 'Select On Startup',\n\t\tvalue: false\n\t})\n\t.finish();\n\nfunction isVisible() {\n\tvar layer = thisLayer;\n\twhile(typeof layer !== \"undefined\" && layer != null) {\n\t\tif(!layer.visible) {\n\t\t\treturn false;\n\t\t}\n\t\tlayer = layer.getParent();\n\t}\n\treturn true;\n}\n\nfunction myColor() {\n\treturn thisLayer.getParent().color;\n}\n\nvar offColor;\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\toffColor = value;\n\tif(scriptProperties[\"isDefault\"] && isVisible()) {\n\t\tshared[scriptProperties[\"key\"]] = myColor();\n\t}\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared[scriptProperties[\"key\"]].subtract(myColor()).length() < 1./256. ? scriptProperties[\"onColor\"] : offColor;\n}\n\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!isVisible()) {return;}\n\tshared[\"cursorOnUi\"] = false;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!isVisible()) {return;}\n\tshared[scriptProperties[\"key\"]] = myColor();\n}\n\n",
				"scriptproperties" : 
				{
					"isDefault" : false,
					"key" : "drawColor",
					"onColor" : "0.09019607843137255 0.09019607843137255 0.09019607843137255"
				},
				"value" : "0.18824 0.18824 0.18824"
			},
			"id" : 212,
			"image" : "models/ColorBtnFrame@0.5x.json",
			"name" : "ColorBtnFrame@0.5x",
			"parent" : 210,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 246,
			"name" : "Visibility",
			"origin" : "1150.00000 -600.00000 0.00000",
			"parent" : 190
		},
		{
			"alpha" : 0.30000001,
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 230,
			"image" : "models/Hide_small.json",
			"name" : "Hide_small",
			"parent" : 246,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\nvar showVis;\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function init(value) {\n\tvar show = localStorage.get(\"showUi\");\n\tshared[\"showUi\"] = typeof show === 'undefined' ? true : show;\n\tshowVis = thisLayer.getParent().getChildren()[1];\n\tshowVis.visible = shared[\"showUi\"];\n\treturn value;\n}\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tshared[\"showUi\"] = !shared[\"showUi\"];\n\tlocalStorage.set('showUi', shared['showUi']);\n\tshowVis.visible = shared[\"showUi\"];\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tshared[\"cursorOnUi\"] = false;\n}",
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 243,
			"image" : "models/show_small.json",
			"name" : "show_small",
			"parent" : 246,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 263,
			"name" : "Lock",
			"origin" : "975.00000 -600.00000 0.00000",
			"parent" : 190,
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared[\"showUi\"];\n}\n",
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 260,
			"image" : "models/Unlocked@0.5x.json",
			"name" : "Unlocked@0.5x",
			"parent" : 263,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'key',\n\t\tlabel: 'Property',\n\t\tvalue: 'foo'\n\t})\n\t.addCheckbox({\n\t\tname: 'default',\n\t\tlabel: 'Default Value',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'persistent',\n\t\tlabel: 'Persistent',\n\t\tvalue: true\n\t})\n\t.finish();\n\nvar altIcon;\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function init(value) {\n\tif(scriptProperties[\"persistent\"]) {\n\t\tvar val = localStorage.get(scriptProperties[\"key\"]);\n\t\tshared[scriptProperties[\"key\"]] = typeof val === 'undefined' ? scriptProperties[\"default\"] : val;\n\t}else {\n\t\tshared[scriptProperties[\"key\"]] = scriptProperties[\"default\"];\n\t}\n\taltIcon = thisLayer.getParent().getChildren()[1];\n\taltIcon.visible = shared[scriptProperties[\"key\"]];\n\treturn value;\n}\n\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\treturn value;\n}\n/**\n * @param {CursorEvent} event\n */\nexport function cursorUp(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[scriptProperties[\"key\"]] = !shared[scriptProperties[\"key\"]];\n\tif(scriptProperties[\"persistent\"]) {\n\t\tlocalStorage.set(scriptProperties[\"key\"], shared[scriptProperties[\"key\"]]);\n\t}\n\taltIcon.visible = shared[scriptProperties[\"key\"]];\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorEnter(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = true;\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorLeave(event) {\n\tif(!shared[\"showUi\"]) {return;}\n\tshared[\"cursorOnUi\"] = false;\n}\n",
				"scriptproperties" : 
				{
					"default" : false,
					"key" : "locked",
					"persistent" : false
				},
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 247,
			"image" : "models/Locked@0.5x.json",
			"name" : "Locked@0.5x",
			"parent" : 263,
			"scale" : "0.50000 0.50000 1.00000",
			"size" : "256.00000 256.00000"
		}
	],
	"version" : 1
}